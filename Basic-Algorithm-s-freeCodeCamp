# Basic-Algorithm-s-freeCodeCamp
Here you can find all the algorithms solved from Basic Algorithm's freeCodeCamp


1 ) Reverse a String:
function reverseString(str) {
var reverse = str.split("").reverse().join("");
return reverse;
}
console.log(reverseString("hello"));
----------------------------------------------------------------------

2 )  Find The Longest Word in a String:
function findLongestWordLength(str) {
	let longestWord = "";
	let words = str.split(" ");
for (let i=0 ; i<words.length; i++ ){
  	let currentWord = words[i];
if (currentWord.length > longestWord.length){
  longestWord = currentWord;
   }
}
return longestWord.length
}
console.log(findLongestWordLength("The quick brown fox jumped over the lazy dog"))
----------------------------------------------------------------------

3 ) Return Largest Numbers in Arrays:
function largestOfFour(arr) {
var maxes= [];
for (var i=0; i<arr.length; i++ ){
  var tempMax = arr.[i][0];
  for (var j=0; j<arr[i].length; j++ ){
    var currentNum = arr.[i][j];
    if (currentNum >= tempMax){
      tempMax = currentNum;
    }
  }
  maxes.push(tempMax);
}
return maxes;
}
console.log(largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]));
----------------------------------------------------------------------

4 ) Convert Celsius to Fahrenheit:
function convertToF(celsius) {
let fahrenheit= celsius * 9/5 +32;
    return fahrenheit;
}
convertToF(30);
----------------------------------------------------------------------
5 ) Factorialize a Number :
function factorialize(num) {
  var result  =  1;
  for (var i=1;  i<= num;  i++ ){
    result = result * i;
  }
  return result;
}
console.log(factorialize(5));
----------------------------------------------------------------------
6 ) Confirm the Ending :
function confirmEnding(str, target) {
  if (str.substr(-target.length) === target){
    return true;
  }
  return false;
}
confirmEnding("Bastian", "n");
----------------------------------------------------------------------
7 ) Repeat a String Repeat a String :
function repeatStringNumTimes(str, num) {
  var final = "";
if(num < 0)return "";
for (var i=0 ; i<num; i++){
	 final = final+str;
}
	return final;
}
console.log(repeatStringNumTimes("abc", 5));
----------------------------------------------------------------------
8 ) Truncate a String :
function truncateString(str, num) {
  if(str.length <= num){
    return str;
  }
  return str.slice(0,num)+ "...";
}
truncateString("A-tisket a-tasket A green and yellow basket", 8);
----------------------------------------------------------------------
9 ) Finders Keepers :
function findElement(arr, func) {
  for (let i=0; i<= arr.length; i++){
    if(func(arr[i])){
      return arr[i];
    }
  }
  return undefined;
}

console.log(findElement([1, 4, 5, 7], num => num % 2 === 0));
----------------------------------------------------------------------
10 ) Boo who :
function booWho(bool) {
 if (typeof bool == "boolean"){
   return true;
 }
 return false;
}
booWho(null);
----------------------------------------------------------------------
11 ) Title Case a Sentence :
function titleCase(str) {
let words = str.toLowerCase().split(" ");
for (let i = 0; i<words.length; i++){
words[i] = words[i][0].toUpperCase() + words[i].slice(1);
}
  return words.join(" ");
}
console.log(titleCase( "I'm a little tea pot" ));

12) Slice and Splice :
function frankenSplice(arr1, arr2, n) {
let result = [];
result.push(...arr2.slice(0,n));		    // skida sve osim 0 do n
result.push(...arr1);				    // ubacuje od n + arr1
result.push(...arr2.slice(n, arr2.length));   //ubacuje od n + arr2.length
return result;
}
frankenSplice([1, 2, 3], [4, 5, 6], 1);

13) Falsy Bouncer :
function bouncer(arr) {
  let result = [];
	for (let i=0 ; i< arr.length; i += 1){
    if (arr[i] ){
      result.push(arr[i]);
    }
  }
  return result;
}
bouncer([7, "ate", "", false, 9]);

14 ) Where do I Belong :
function getIndexToIns(arr, num) {
  arr.sort(function(a,b){
    return a-b;
  });
  for (var i=0; i<=arr.length; i++ ){
  if(num <= arr[i]){
    return i;
  }
  }
  return arr.length;
}
getIndexToIns([40, 60], 50);

15) Mutations:
function mutation(arr) {
var firstWord = arr[0].toLowerCase();
var secondWord = arr[1].toLowerCase();

for (var i=0; i<secondWord.length; i++ ){
  if(firstWord.indexOf(secondWord[i])=== -1) return false;
}
return true;
 }
mutation(["hello", "hey"]);

16)  Chunky Monkey
function chunkArrayInGroups(arr, size) {
var groups = [];
while(arr.length > 0) {
  groups.push(arr.slice(0,size));
  arr = arr.slice(size);
}
return groups;
}
chunkArrayInGroups(["a", "b", "c", "d"], 2);
